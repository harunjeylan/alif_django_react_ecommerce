# Generated by Django 4.1.3 on 2023-03-13 07:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('code', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product-images')),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('street1', models.CharField(blank=True, max_length=100, null=True)),
                ('street2', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'address',
            },
        ),
        migrations.CreateModel(
            name='Organize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.category')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.collection')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='product-images')),
                ('date', models.DateField(auto_now_add=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.brand')),
                ('images', models.ManyToManyField(blank=True, to='api.image')),
                ('organize', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.organize')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('options', models.ManyToManyField(to='api.option')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('products', models.ManyToManyField(to='api.product')),
            ],
        ),
        migrations.CreateModel(
            name='VariantOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('options', models.ManyToManyField(to='api.option')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.variant')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('description', models.TextField(blank=True, null=True)),
                ('rating', models.SmallIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.product')),
            ],
        ),
        migrations.CreateModel(
            name='RecommendedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(max_length=200)),
                ('products', models.ManyToManyField(blank=True, to='api.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='variants',
            field=models.ManyToManyField(blank=True, to='api.variantoption'),
        ),
        migrations.AddField(
            model_name='organize',
            name='tags',
            field=models.ManyToManyField(to='api.tag'),
        ),
        migrations.AddField(
            model_name='organize',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.vendor'),
        ),
        migrations.CreateModel(
            name='OrderdVariantOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.option')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.variant')),
            ],
        ),
        migrations.CreateModel(
            name='OrderdProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=1)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.product')),
                ('variants', models.ManyToManyField(blank=True, to='api.orderdvariantoption')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fulfillment_status', models.CharField(choices=[('complete', 'Complete'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('complete', 'Complete'), ('pending', 'Pending'), ('partially_fulfilled', 'Partially Fulfilled')], default='pending', max_length=25)),
                ('delivery_type', models.CharField(blank=True, choices=[('worldwide_delivery', 'Worldwide Delivery'), ('selected_countries', 'Selected Countries'), ('local_delivery', 'Local Delivery')], default='local_delivery', max_length=25, null=True)),
                ('delivery_method', models.CharField(choices=[('none', 'NONE'), ('ppl', 'PPL'), ('UPS', 'ups'), ('DHL', 'dhl'), ('usps', 'Usps next day')], default='none', max_length=25)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
                ('billing_adderss', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_billing_adderss', to='api.orderaddress')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('products', models.ManyToManyField(blank=True, to='api.orderdproduct')),
                ('shipping_adderss', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_shipping_adderss', to='api.orderaddress')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regular_pricing', models.FloatField()),
                ('sale_pricing', models.FloatField()),
                ('stock', models.FloatField()),
                ('shipping_type', models.CharField(choices=[('fulfilled_by_seller', 'Fulfilled by Seller'), ('fulfilled_by_phoenix', 'Fulfilled by Phoenix')], default='fulfilled_by_seller', max_length=25)),
                ('global_delivery', models.CharField(choices=[('worldwide_delivery', 'Worldwide Delivery'), ('selected_countries', 'Selected Countries'), ('local_delivery', 'Local Delivery')], default='worldwide_delivery', max_length=25)),
                ('fragile_product', models.BooleanField(blank=True, default=False)),
                ('max_allowed_temperature', models.CharField(blank=True, max_length=25, null=True)),
                ('biodegradable', models.BooleanField(blank=True, default=False)),
                ('frozen_product', models.BooleanField(blank=True, default=False)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('countries', models.ManyToManyField(blank=True, to='api.country')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.product')),
            ],
        ),
    ]
